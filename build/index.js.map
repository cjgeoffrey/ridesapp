{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/root.jsx", "../app/routes/rides/index.jsx", "../app/data/database.server.js", "../app/data/rides.server.js", "../app/components/RidesList.js", "../app/routes/index.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(err) {\n          reject(err);\n        },\n        onError(error) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { useLoaderData, Link } from \"@remix-run/react\";\nimport { getRidesData } from \"../../data/rides.server\";\nimport RidesList, { links as rideStylesLinks } from \"~/components/RidesList\";\n\nexport default function RidesInfo() {\n  return (\n    <>\n      <h1>Rides Info</h1>\n      <p>3001</p>\n\n      <RidesList />\n    </>\n  );\n}\n\n//Get ride data from the database\nexport async function loader() {\n  const rides = await getRidesData();\n  return rides;\n}\n\nexport function links() {\n  return [...rideStylesLinks()];\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\n/**\n * @type PrismaClient\n */\nlet prisma;\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n  prisma.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  prisma = global.__db;\n}\n\nexport { prisma };\n", "//For fetching ride data from the database\nimport { prisma } from \"./database.server\";\n\nexport async function addRideData(rideData) {\n  prisma.ridesData.create({\n    data: {},\n  });\n}\n\nexport async function getRidesData() {\n  try {\n    const rides = await prisma.ridesData.findMany({ take: 5 });\n    return rides;\n  } catch (error) {\n    throw error;\n  }\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport styles from \"./RidesList.css\";\n\nfunction RideList() {\n  const rides = useLoaderData();\n  console.log(rides);\n  return (\n    <ul id=\"ride-list\">\n      {rides.map((ride, index) => (\n        <li key={ride.id} className=\"ride\">\n          {/* Link here points to notes.$noteId.jsx to render content dyamically */}\n          <Link to={\"..\"}>\n            <article>\n              <ul className=\"ride-info\">\n                <li>#{index + 1}</li>\n                <li>{ride.DepartureStationName}</li>\n                <li>{ride.ReturnStationName}</li>\n                <li>{ride.DistanceCovered}</li>\n                <li>{(ride.DurationInSec / 60).toFixed(0)} minutes</li>\n              </ul>\n              <h2>{ride.title}</h2>\n\n              <p>{ride.content}</p>\n            </article>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default RideList;\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n", "export default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Welcome to Rides App </h1>\n    </div>\n  );\n}\n", "export default {'version':'a2cd72e0','entry':{'module':'/build/entry.client-LSWTD7UC.js','imports':['/build/_shared/chunk-EXYHC3JK.js','/build/_shared/chunk-EETRBLDB.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-OA2S4U4W.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-S6CWYEXF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rides/index':{'id':'routes/rides/index','parentId':'root','path':'rides','index':true,'caseSensitive':undefined,'module':'/build/routes/rides/index-VQNOTJY5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'url':'/build/manifest-A2CD72E0.js'};", "\nimport * as entryServer from \"./entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/rides/index.jsx\";\nimport * as route2 from \"./routes/index.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/rides/index\": {\n      id: \"routes/rides/index\",\n      parentId: \"root\",\n      path: \"rides\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "links", "import_react", "import_react", "import_jsx_dev_runtime", "RidesList_default", "import_jsx_dev_runtime", "RidesList_default", "links", "import_jsx_dev_runtime"]
}
